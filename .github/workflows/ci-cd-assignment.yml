name: CI-CD Assignment Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build
      
      - name: Test
        run: |
          npx serve -s ./dist -l 3000 &
          sleep 15
          curl http://localhost:3000 | grep ToDO

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build image
        run: |
          docker build -t troybarrett8362/todo-app:latest .

      - name: Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image
        run: |
          docker push troybarrett8362/todo-app:latest

  e2e:
    name: E2E Testing
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build
    
      - name: Test
        run: |
          npx serve -s ./dist -l 3000 &
          sleep 15
          curl http://localhost:3000 | grep ToDO

      - name: Cypress
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          config-file: cypress.config.js
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Vercel
        run: npm install -g vercel

      - name: Vercel deployment
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel --prod --yes --token $VERCEL_TOKEN